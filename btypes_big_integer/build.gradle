apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

base {
    archivesName = "${rootProject.name}-btypes"
}

repositories {
    mavenCentral()
    maven {
        name "snapshots"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    implementation group: 'org.clojure', name: 'clojure', version: '1.10.0'
    testImplementation 'junit:junit:4.8.2'
}

java {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task fatJar(type: Jar) {
    archivesBaseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        exclude "META-INF/*.md"
        exclude "module-info.class"
    }
    from('src/main/python'){include 'btypes/*.py'}
    with jar
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

sourceSets.main.java.srcDirs = ['src/main/java']

sourceSets.test.runtimeClasspath += files(sourceSets.main.java.srcDirs)

tasks.withType(JavaExec) {
    def env_vars = ['LD_LIBRARY_PATH'  : ("$System.env.LD_LIBRARY_PATH" + System.getProperty("path.separator") + "$projectDir/"),
                    'DYLD_LIBRARY_PATH': ("$System.env.DYLD_LIBRARY_PATH" + System.getProperty("path.separator") + "$projectDir/"),
                    'PATH'             : ("$System.env.PATH" + System.getProperty("path.separator") + "$projectDir/")]
    environment env_vars

    systemProperty "java.library.path", "./"
}

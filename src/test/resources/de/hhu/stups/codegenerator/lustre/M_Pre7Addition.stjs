let pre: M_Pre7 = new M_Pre7();
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(1))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(true))));
console.log(pre.getY().toString());
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(2))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(false))));
console.log(pre.getY().toString());
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(3))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(false))));
console.log(pre.getY().toString());
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(4))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(true))));
console.log(pre.getY().toString());
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(5))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(true))));
console.log(pre.getY().toString());
pre.clock_step(new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(6))), new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(false))));
console.log(pre.getY().toString());
let when: M_When2 = new M_When2();
when.clock_step(new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(false))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(1))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(2))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(3))));
console.log(when.getRes1().toString());
console.log(when.getRes2().toString());
when.clock_step(new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(true))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(2))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(3))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(4))));
console.log(when.getRes1().toString());
console.log(when.getRes2().toString());
when.clock_step(new BRelation<REF, BBoolean>(new BTuple(new REF(enum_REF.ref), new BBoolean(false))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(3))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(4))), new BRelation<REF, BInteger>(new BTuple(new REF(enum_REF.ref), new BInteger(5))));
console.log(when.getRes1().toString());
console.log(when.getRes2().toString());